
@import url("https://hello.myfonts.net/count/3ab588");
@import 'reset-css/reset.css';

@font-face {
  font-family: 'Sang-Bleu-Sunrise';
  src: url('webfonts/SangBleuSunrise-Regular-WebS.woff2') format('woff2'), url('webfonts/SangBleuSunrise-Regular-WebS.woff') format('woff');
}

@font-face {
  font-family: 'Mont-Bold';
  src: url('webfonts/3AB588_1_0.eot');
  src: url('webfonts/3AB588_1_0.eot?#iefix') format('embedded-opentype'), url('webfonts/3AB588_1_0.woff2') format('woff2'), url('webfonts/3AB588_1_0.woff') format('woff'), url('webfonts/3AB588_1_0.ttf') format('truetype');
}

@mixin fontRunText() {
  font-family: Sang-Bleu-Sunrise, Arial, Helvetica, sans-serif;
}

@mixin fontTitle() {
  font-family: Mont-Bold, Arial, Helvetica, sans-serif;
}

// utilities
$breakpoints: (
  'desktop-xl': 'min-width: 1921px',
  'desktop-l': 'max-width: 1440px',
  'desktop': 'max-width: 1280px',
  'tablet': 'max-width: 1024px',
  'phone': 'max-width: 640px',
  'phone-xs': 'max-width: 375px',
  'hover': 'hover: hover'
);

@mixin viewport($name) {
  @if map-has-key($breakpoints, $name) {
    @media (#{map-get($breakpoints, $name)}) {
      @content;
    }
  }
}

@mixin title {
  @include fontTitle();

  line-height: var(--s-line-height-titles);
  letter-spacing: -0.01em;
}

@mixin label {
  letter-spacing: 0.025em;
  text-transform: uppercase;
}

@mixin label-small {
  @include label;

  font-size: var(--s-text-small);
}

@mixin twerk-anime {
  animation: twerk 0.4s cubic-bezier(0.3, 0.7, 0, 1.5) both infinite;
}

@keyframes twerk {
  10%,
  90% {
    transform: translate3d(calc(var(--s-twerk) * -1), calc(var(--s-twerk) * 1), 0);
  }

  20%,
  80% {
    transform: translate3d(calc(var(--s-twerk) * -1), calc(var(--s-twerk) * 1), 0);
  }

  30%,
  50%,
  70% {
    transform: translate3d(calc(var(--s-twerk) * 1), calc(var(--s-twerk) * -1), 0);
  }

  40%,
  60% {
    transform: translate3d(calc(var(--s-twerk) * 1), calc(var(--s-twerk) * 1), 0);
  }
}

* {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0.1);
}

::selection {
  background: rgba(0, 0, 0, 0.99);
  color: white;
  text-shadow: none;
}

.is-selection-inverted {
  *::selection {
    background: rgba(255, 255, 255, 0.99);
    color: black;
    text-shadow: none;
  }
}

// styles

:root {
  //colors
  --c-text: rgba(0, 0, 0, 1);
  --c-text-inverted: rgba(255, 255, 255, 1);
  --c-lines: rgba(0, 0, 0, 1);
  --c-lines-inverted: rgba(255, 255, 255, 1);

  //sizes
  --s-text: 1.75rem;
  --s-text-title-font-compensated: 1.1;
  --s-text-small: calc(var(--s-text) * 0.65);
  --s-text-h1: calc(var(--s-text) * 4);
  --s-text-h2: calc(var(--s-text) * 3);
  --s-text-lead: calc(var(--s-text) * 1.5);
  --s-text-navigation: 1.8vh;
  --s-line-height: 1.6;
  --s-line-height-titles: 1;
  --s-line-height-titles-small: 1.2;
  --s-gutter: 8vh;
  --s-logo: 6vh;
  --s-lines: 2px;
  --s-twerk: 0.5px;
  --s-decal-close-to-corner: 0.5em;
  --s-preloader: 100px;
  --s-preloader-line: 1px;

  //eases
  --e-in: cubic-bezier(0.895, 0.03, 0.685, 0.22); // quart
  --e-out: cubic-bezier(0.165, 0.84, 0.44, 1); // quart
  --e-inout: cubic-bezier(0.77, 0, 0.175, 1); // quart

  @media (min-height: 1024px) {
    --s-text-navigation: 1.4vh;
    --s-logo: 5vh;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  @include title;
}

b,
strong {
  @include fontTitle();
}

p {
  --s-p-margin: 1.5em;

  margin-bottom: var(--s-p-margin);

  &.no-margin {
    margin-bottom: 0;
  }

  &.margin-top {
    margin-bottom: 0;
    margin-top: var(--s-p-margin);
  }
}

a {
  color: var(--c-text);
  text-decoration: none;

  .is-inverted & {
    color: var(--c-text-inverted);
  }
}

html,
body {
  height: 100%;
  min-height: 100%;
}

html {
  @include fontRunText;

  font-size: 1vw;
}

body {
  font-size: var(--s-text);
  line-height: var(--s-line-height);
  color: var(--c-text);
  overflow-x: hidden;
}

.font-compensated {
  font-size: calc(var(--s-text) * var(--s-text-title-font-compensated));
}

.close-button {
  --s-dims: 1.5em;
  --s-square: -0.4em;
  --c-square: var(--c-text);
  --c-arrow: var(--c-lines);

  $root: #{&};

  width: var(--s-dims);
  height: var(--s-dims);

  &::before,
  &::after {
    pointer-events: none;
    content: "";
    display: block;
    position: absolute;
    top: var(--s-square);
    right: var(--s-square);
    bottom: var(--s-square);
    left: var(--s-square);
    background-color: var(--c-square);
    transform: scaleY(0);
    transform-origin: top left;
    transition: transform var(--e-out) 0.35s;
  }

  &:hover {
    --c-arrow: white;

    @include twerk-anime();

    &::before {
      transform-origin: bottom left;
      transform: scaleY(1);
    }
  }

  &__link {
    display: block;
    position: relative;
    width: var(--s-dims);
    height: var(--s-dims);
    transform: rotate(45deg);

    &::after {
      transform: rotate(90deg);
    }

    &::before,
    &::after {
      content: "";
      display: block;
      position: absolute;
      top: 50%;
      width: var(--s-dims);
      height: var(--s-lines);
      background-color: var(--c-arrow);
      transition: background-color ease-out 0.25s;
    }
  }

  .is-inverted & {
    --c-arrow: var(--c-lines-inverted);
  }

  &--black {
    --c-square: white;

    &::after {
      z-index: -1;
      transform: scale(1);
      background-color: black;
    }

    &:hover {
      --c-arrow: black;
    }
  }
}

.arrow {
  --s-width: 3em;
  --s-height: 0.75em;
  --c: var(--c-text);
  --d: 0.4s;
  --e: var(--e-inout);

  position: relative;
  background: var(--c);
  height: var(--s-lines);
  width: var(--s-width);
  transition: width var(--e) var(--d);

  &::before,
  &::after {
    content: "";
    position: absolute;
    left: 0;
    height: var(--s-lines);
    width: var(--s-height);
    background: var(--c);
    transition: width var(--e) var(--d);
    transition-delay: 0.3s;
  }

  &::before {
    transform: rotate(-45deg);
    transform-origin: left bottom;
  }

  &::after {
    transform: rotate(45deg);
    transform-origin: left top;
  }
}

.preloader {
  --c-line: white;

  position: relative;
  margin: 0 auto;
  width: var(--s-preloader);

  &::before {
    content: '';
    display: block;
    padding-top: 100%;
  }

  &__svg {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    height: 100%;
    margin: auto;
    animation: preloader-rotate 2s linear infinite;
    transform-origin: center center;
  }

  &__path {
    stroke: var(--c-line);
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
    stroke-linecap: round;
    stroke-width: var(--s-preloader-line);
    animation: preloader-dash 1.5s ease-in-out infinite;
  }
}

@keyframes preloader-rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes preloader-dash {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -35px;
  }

  100% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -124px;
  }
}

.logo {
  $root: #{&};

  position: fixed;
  z-index: 1;
  top: var(--s-gutter);
  left: var(--s-gutter);
  transform: rotate(-90deg) translate(-99%, -20%);
  transform-origin: top left;
  will-change: transform;

  &__container {
    &:hover {
      @include twerk-anime();
    }
  }

  &__mask {
    display: block;
    position: absolute;
    width: 0%;
    height: 100%;
    left: 100%;
    transform: translateX(-100%);
    overflow: hidden;
    transition: width var(--e-inout) 0.5s;

    #{$root}:hover & {
      width: 100%;
      left: 0;
      transform: none;
    }
  }

  &__el {
    display: block;
    width: auto;
    height: var(--s-logo);
    fill: var(--c-text);

    &--black {
      fill: black;
      position: absolute;
      right: 0;

      #{$root}:hover & {
        position: relative;
        right: 0;
      }
    }
  }
}

.dash {
  --s-top: 0.675em;

  color: rgba(0, 0, 0, 0);
  display: inline-block;
  position: relative;
  width: 0.5em;
  font-size: 1em;

  &--spaced {
    margin: 0 0.2em;
  }

  &--title {
    --s-top: 0.5em;
  }

  &::before {
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: var(--s-lines);
    top: var(--s-top);
    background-color: var(--c-lines);

    .is-inverted & {
      background-color: var(--c-lines-inverted);
    }
  }
}

.small-title {
  @include title();

  display: block;
  line-height: var(--s-line-height-titles-small);
  padding-bottom: 0.3em;
}

.text-link {
  --s-padding: -0.1em;

  display: inline-block;
  position: relative;
  transition: color ease-out 0.25s;
  text-decoration: underline;

  &::before {
    content: "";
    display: block;
    position: absolute;
    top: var(--s-padding);
    bottom: calc(var(--s-padding) + 0.05em);
    right: calc(var(--s-padding) * 4);
    left: calc(var(--s-padding) * 4);
    background-color: var(--c-text);
    z-index: -1;
    transform: scaleX(0);
    transform-origin: top right;
    transition: transform var(--e-inout) 0.25s;
    will-change: transform;

    .is-inverted & {
      background-color: white;
    }
  }

  &:hover {
    @include twerk-anime();

    color: white;
    text-decoration: none;

    .is-inverted & {
      color: black;
    }

    &::before {
      transform: none;
      transform-origin: top left;
    }
  }
}

.navigation {
  @include fontTitle;
  @include label;

  position: fixed;
  z-index: 999;
  bottom: var(--s-gutter);
  left: var(--s-gutter);
  font-size: var(--s-text-navigation);
  line-height: 1;
  transform: rotate(-90deg) translate(0, 100%);
  transform-origin: bottom left;

  &__link {
    --s-padding: -0.5em;

    display: inline-block;
    position: relative;
    margin-right: 3vh;
    transition: color ease-out 0.25s;

    &::before,
    &::after {
      content: "";
      display: inline-block;
      position: absolute;
      top: var(--s-padding);
      bottom: calc(var(--s-padding) + 0.2em);
      right: var(--s-padding);
      left: var(--s-padding);
      background-color: var(--c-text);
      z-index: -1;
      transform: scaleX(0);
      transform-origin: top right;
      transition: transform var(--e-inout) 0.25s;
      will-change: transform;
    }

    &::after {
      left: 0;
      right: 0;
      top: 0.95em;
      bottom: auto;
      height: var(--s-lines);
    }

    &:hover {
      @include twerk-anime();

      color: white;

      &::before {
        transform: none;
        transform-origin: top left;
      }
    }

    &.is-current {
      cursor: default;

      &::before {
        transform-origin: top right;
      }

      &::after {
        transform: none;
      }

      &:hover {
        color: var(--c-text);
        animation: none;

        &::before {
          transform: scaleX(0);
        }
      }
    }
  }
}

.content-page {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 50vw;
  margin-left: 50vw;
  min-height: 100vh;
  padding-top: var(--s-gutter);
  padding-right: var(--s-gutter);
  box-sizing: border-box;

  &__page-title {
    --s-decal-y: calc(var(--s-gutter) * 0.35);
    --d-transition: 0.15s;

    @include label-small;

    position: fixed;
    top: calc(var(--s-gutter) - 0.1em);
    left: 25vw;

    &__el {
      display: block;
      transition: opacity var(--e-out) var(--d-transition), transform var(--e-out) var(--d-transition);

      .is-hidden > & {
        opacity: 0;
        transform: translateY(calc(var(--s-decal-y) * -1));
      }

      .is-jumping > & {
        transition-duration: 0s;
      }

      .is-below > & {
        transform: translateY(var(--s-decal-y)) !important;
      }
    }
  }

  &__lead {
    position: relative;
    font-size: var(--s-text-lead);
    margin-top: -0.4em;
    margin-bottom: var(--s-gutter);
  }

  &__3-4 {
    position: relative;
    left: -25vw;
    width: 75vw;
  }

  &__subtitle {
    @include label-small;

    position: relative;
    margin-top: 7em;
    margin-bottom: 4em;

    &:first-child {
      margin-top: 0;
    }

    &::after {
      content: "";
      position: absolute;
      left: 0;
      right: 0;
      bottom: -0.2em;
      height: var(--s-lines);
      background-color: var(--c-lines);
    }
  }

  &__list {
    margin-top: 2em;

    &:first-child {
      margin-top: 0;
    }
  }
}

.info {
  &__image {
    background-color: black;

    &-el {
      display: block;
      filter: grayscale(100%) contrast(2) brightness(2);
      transition: filter var(--e-out) 0.3s;

      &:hover {
        filter: none;
      }
    }
  }
}

.contact {
  &__image {
    height: 45vw;
    background-color: black;
  }

  &__address {
    font-size: var(--s-text-lead);
    margin-top: var(--s-gutter);
  }
}

.projects {
  --d-opacity: 0.35s;

  overflow: hidden;

  &__container {
    width: 50%;
    margin-left: 50%;
    padding-top: var(--s-gutter);
    transition: transform var(--e-out) 0.75s, opacity ease var(--d-opacity);
  }

  &__list-container {
    padding-bottom: var(--s-gutter);
  }

  &__title {
    @include label-small;

    position: fixed;
    left: 25vw;
    top: var(--s-gutter);
    width: 20vw;
  }

  &__title-name {
    @include label-small;

    letter-spacing: 0.01em;
  }

  &__title-detail {
    @include fontRunText();

    display: block;
    font-size: calc(var(--s-text-small) * (2 - var(--s-text-title-font-compensated)));
    text-transform: none;
    letter-spacing: 0.0425em;
    padding-top: 0.5em;
    transform: translateX(-0.02em);
  }
}

.project-list {
  $root: #{&};

  border-bottom: var(--s-lines) solid var(--c-lines);

  &:first-child {
    border-top: var(--s-lines) solid var(--c-lines);
  }

  &__link {
    display: block;
    padding: 3em 0;
    padding-right: var(--s-gutter);
  }

  &__title {
    font-size: var(--s-text-h2);
    padding-bottom: 0.3em;
    transition: color ease-out 0.2s;
    will-change: color;

    #{$root}:hover & {
      @include twerk-anime();
    }
  }

  &__date {
    @include fontTitle;
  }

  &__separation {
    display: inline-block;
    padding: 0 0.2em;
  }
}

.project {
  position: relative;
  z-index: 100;

  &.is-inverted {
    color: var(--c-text-inverted);
  }

  &__container {
    min-height: 100vh;
  }

  &__close-button {
    position: fixed;
    z-index: 1000;
    top: calc(var(--s-gutter) - var(--s-decal-close-to-corner));
    right: calc(var(--s-gutter) - var(--s-decal-close-to-corner));
  }

  &__header {
    padding: var(--s-gutter);
  }

  &__title {
    font-size: var(--s-text-h1);
    padding-right: var(--s-gutter);
  }

  &__lead {
    width: 50%;
  }

  &__background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
  }
}

.miscs {
  &__container {
    flex-grow: 1;
  }
}

.miscs-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-column-gap: 2px;
  grid-row-gap: calc(var(--s-gutter) * 1);
  padding-bottom: 40%;
  align-items: center;
}

.misc-list {
  --d-in-opacity: 0.75s;
  --e-opacity: ease;
  --d-in-transform: 1s;
  --e-transform: var(--e-out);
  --d-fading: 0.5s;
  --s-scaleHover: 0.75;
  --d-scaleHover: 0.35s;
  --e-scaleHover: var(--e-inout);
  --s-translateHover: -1.5em;
  --s-translateHoverAddedScale: 2;
  --d-translateHover: 0.35s;

  $root: #{&};

  visibility: hidden;
  position: relative;
  opacity: 0;
  transition: opacity var(--e-opacity) var(--d-in-opacity);

  &.is-displayed {
    visibility: visible;
    opacity: 1;
    transform: none;
  }

  &:nth-child(2n+0) {
    transform: translateY(15vw);
  }

  &__container {
    #{$root}:hover & {
      @include twerk-anime();
    }
  }

  &__link {
    display: block;
  }

  &__img {
    transition: transform var(--e-scaleHover) var(--d-scaleHover);

    #{$root}:hover & {
      transform: scale3d(var(--s-scaleHover), var(--s-scaleHover), 1);
    }
  }

  &__img-el {
    width: 100%;
    display: block;
    visibility: hidden;
    transition: visibility linear calc(var(--d-fading) * 0.7);

    #{$root}:hover & {
      visibility: visible;
    }
  }

  &__img-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    transition: opacity ease-out var(--d-fading);

    #{$root}:hover & {
      opacity: 0;
    }
  }

  &__info {
    line-height: var(--s-line-height);
    margin-top: 1.2em;
    padding-left: 1.5em;
    transition: transform var(--e-scaleHover) var(--d-translateHover);

    #{$root}:hover & {
      transform: translateY(calc(var(--s-translateHover) - 0.75em));
    }
  }

  &__title {
    @include fontRunText();
  }
}

.misc {
  position: relative;
  z-index: 100;
  background-color: black;
  color: white;

  &.is-inverted {
    color: var(--c-text-inverted);
  }

  &__container {
    min-height: 100vh;
  }

  &__close-button {
    position: fixed;
    z-index: 1000;
    top: calc(var(--s-gutter) - var(--s-decal-close-to-corner));
    right: calc(var(--s-gutter) - var(--s-decal-close-to-corner));
  }

  &__header {
    padding: var(--s-gutter);
  }

  &__lead {
    width: 50%;
  }

  &__link {
    margin-right: 1.5em;
  }

  &__medias {
    padding-top: var(--s-gutter);
    padding-left: calc(var(--s-gutter) * 2);
    padding-right: calc(var(--s-gutter) * 2);
    padding-bottom: calc(var(--s-gutter) * 2);
  }

  &__media {
    margin-top: var(--s-gutter);

    &:first-child {
      margin-top: 0;
    }

    &--margin-top {
      margin-top: calc(var(--s-gutter) * 2);
    }
  }
}

.zoom-icon {
  --s-dimensions: calc(var(--s-gutter) * 0.75);
  --t-icon: translate(-50%, -1px);
  --d-transform: 0.2s;

  $root: #{&};

  width: var(--s-dimensions);
  height: var(--s-dimensions);

  &::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: var(--s-lines) var(--c-lines) solid;
    box-sizing: border-box;
    background-color: var(--c-lines-inverted);
    transform: rotate(45deg); //rotate to get smooth edges on each resolution

    .is-inverted & {
      border-color: var(--c-lines-inverted);
      background-color: var(--c-lines);
    }
  }

  &.is-inverted {
    &::before {
      border-color: var(--c-lines-inverted);
      background-color: var(--c-lines);
    }
  }

  &__el {
    width: var(--s-dimensions);
    height: var(--s-dimensions);
    will-change: transform;

    &::before,
    &::after {
      content: "";
      position: absolute;
      width: 50%;
      height: var(--s-lines);
      top: 50%;
      left: 50%;
      transform: var(--t-icon);
      background-color: var(--c-lines);
    }

    &::before {
      transition: transform var(--e-out) var(--d-transform);
    }

    &::after {
      transform: var(--t-icon) rotate(90deg);
    }

    .is-inverted &,
    #{$root}.is-inverted & {
      &::before,
      &::after {
        background-color: var(--c-lines-inverted);
      }
    }

    #{$root}.is-global.is-zoomed & {
      &::before {
        transform: var(--t-icon) scaleX(0);
      }
    }
  }

  &.is-active {
    --d-transform: 0.5s;
  }

  &.is-global {
    --s-decal-x: 50%;
    --s-decal-y: 50%;

    position: fixed;
    pointer-events: none;
    top: 50%;
    left: 50%;
    z-index: 2000;
    opacity: 0;
    visibility: hidden;
    transform: translate(var(--s-decal-x), var(--s-decal-x)) scale(0) rotate(360deg);
    transition: transform var(--e-in) var(--d-transform), opacity linear var(--d-transform), visibility linear 0s var(--d-transform);
    will-change: transform, opacity, top, left;

    &.is-active,
    &.is-zoomed {
      opacity: 1;
      visibility: visible;
      transform: translate(var(--s-decal-x), var(--s-decal-x)) scale(1) rotate(0deg);
      transition-timing-function: var(--e-out), linear;
      transition-delay: 0s;
    }

    &.is-zoomed {
      transform: translate(var(--s-decal-x), var(--s-decal-x)) scale(1) rotate(-90deg);
    }

    .is-touch & {
      --s-decal-x: 0;
      --s-decal-y: 0;

      top: var(--s-gutter);
      left: auto;
      right: var(--s-gutter);
    }
  }
}

.media-image {
  --c-border: rgba(255, 255, 255, 0.1);
  --d-zooming: 0.5s;

  $root: #{&};

  position: relative;
  min-height: calc(var(--s-gutter) * 2 + var(--s-preloader));
  outline: var(--s-lines) solid var(--c-border);
  transition: outline-color linear 0.2s, min-height linear 0s 0.2s;

  &.is-loaded {
    outline-color: transparent;
    min-height: 0;
  }

  &.is-zoomable {
    cursor: pointer;
  }

  &__el {
    position: absolute;
    display: block;
    max-width: 100%;
    margin: 0 auto;
    opacity: 0;
    visibility: hidden;
    transition: opacity linear 0.2s 0.2s;

    #{$root}.is-loaded & {
      position: relative;
      visibility: visible;
      opacity: 1;
    }
  }

  &__preloader {
    position: absolute;
    left: 50%;
    top: var(--s-gutter);
    transform: translateX(-50%);
    transition: opacity linear 0.2s, visibility 0s 0.2s;

    #{$root}.is-loaded & {
      opacity: 0;
      visibility: hidden;
    }
  }

  &__zoom-icon {
    --s-margin: calc(var(--s-gutter) * 0.5);

    position: absolute;
    display: none;
    top: var(--s-margin);
    right: 0;
    transform: translateX(50%);
    transition: opacity ease-out 0.2s var(--d-zooming);

    #{$root}.is-zoomed & {
      opacity: 0;
    }

    .is-touch & {
      display: block;
    }
  }
}

.media-image-zoomed {
  --s-scale-dezoomed: 1;
  --s-scale-zoomed: 1;
  --d-zooming: 0.5s;

  position: absolute;
  top: 0;
  left: 0;
  z-index: 1000;
  visibility: hidden;
  cursor: pointer;
  transition: transform var(--e-out) var(--d-zooming), visibility linear 0s var(--d-zooming);
  transform: scale(var(--s-scale-dezoomed));
  will-change: transform, visibility, left, top;

  &.is-active {
    transform: scale(var(--s-scale-zoomed));
    transition-delay: 0s;
    visibility: visible;
  }

  &.is-hidden {
    display: none;
  }
}

.media-image-zoomed-background {
  --d-fading: 0.5s;

  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 999;
  visibility: hidden;
  background-color: black;
  opacity: 0;
  transition: opacity ease-out var(--d-fading) 0s, visibility linear 0s calc(var(--d-fading));

  &.is-active {
    cursor: zoom-out;
    opacity: 1;
    visibility: visible;
    transition-delay: 0s, 0s;
  }
}

.media-video {
  $root: #{&};

  position: relative;

  &__el {
    display: block;
    max-width: 100%;
    height: auto;
    margin: 0 auto;
    opacity: 0.35;
    transition: opacity linear 0.2s;

    #{$root}.is-loaded & {
      opacity: 1;
    }
  }

  &__preloader {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    transition: opacity linear 0.2s, visibility 0s 0.2s;

    #{$root}.is-loaded & {
      opacity: 0;
      visibility: hidden;
    }
  }
}

.pagination {
  $root: #{&};

  --s-text-translate: calc(var(--s-text) * -2);
  --c-text-normal: var(--c-text);
  --c-text-hover: var(--c-text-inverted);
  --c-background: var(--c-text);

  color: var(--c-text-normal);
  display: flex;

  &.is-black {
    --c-background: var(--c-text-inverted);
    --c-text-hover: var(--c-text);
  }
}

.pagination-link {
  $root: #{&};

  position: relative;
  flex-basis: 50%;
  text-align: center;
  box-sizing: border-box;
  padding: calc(var(--s-gutter) * 3) calc(var(--s-gutter) * 2);

  &::before {
    content: "";
    position: absolute;
    z-index: 0;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: var(--c-background);
    transform: scaleY(0);
    transform-origin: left bottom;
    transition: transform var(--e-inout) 0.4s;
  }

  &:hover {
    color: var(--c-text-hover);

    &::before {
      transform: none;
    }
  }

  &:first-child {
    border-right: var(--s-lines) solid var(--c-text);

    .is-black & {
      border-right: var(--s-lines) solid white;
    }
  }

  &__text-container {
    #{$root}:hover & {
      @include twerk-anime();
    }
  }

  &__subtitle,
  &__title {
    position: relative;
    display: block;
    z-index: 1;
    transition: color linear 0.2s, transform var(--e-inout) 0.3s;
  }

  &__subtitle {
    font-size: var(--s-text-small);
    margin-bottom: 0.5em;

    #{$root}:hover & {
      transform: translateY(var(--s-text-translate));
    }
  }

  &__title {
    @include fontTitle();

    line-height: var(--s-line-height-titles-small);
    transition-duration: 0.2s, 0.5s;

    #{$root}:hover & {
      transform: translateY(var(--s-text-translate));
    }
  }

  &__arrow {
    --s-width: 0;
    --s-height: 0;
    --c: var(--c-text-hover);
    --t: translate(-50%, 1em);

    position: absolute;
    left: 50%;
    transform: var(--t);

    &--next {
      transform: var(--t) scaleX(-1);
    }

    #{$root}:hover & {
      --s-width: 2.8em;
      --s-height: 0.65em;
    }
  }
}

.credits {
  font-size: calc(var(--s-text-small));
  padding: var(--s-gutter);
  padding-left: 0;

  &__text {
    display: block;
    transform: translateY(0.35em);
  }
}

.transition-logo {
  z-index: 999;
  pointer-events: none;
  opacity: 0;
  transition: opacity ease-out 0.2s;

  &.is-displayed {
    opacity: 1;
    transition-delay: 0.2s;
  }

  .logo__mask {
    display: none;
  }

  .logo__el {
    fill: white;
  }
}

.transition-title {
  @include fontTitle();

  position: fixed;
  pointer-events: none;
  z-index: 999;
  bottom: var(--s-gutter);
  right: var(--s-gutter);
  line-height: var(--s-line-height-titles);
  color: white;
  text-transform: uppercase;
  font-size: var(--s-logo);
  letter-spacing: 0.025em;
  transform: rotate(-90deg) translateX(100%);
  transform-origin: bottom right;
  opacity: 0;
  transition: opacity ease-out 0.2s;

  &.is-displayed {
    opacity: 1;
    transition-delay: 0.2s;
  }
}

.transition-background {
  &__el-in,
  &__el-out {
    position: fixed;
    z-index: 1000;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    will-change: transform;
    background-color: white;

    &.is-normal-page {
      background-color: black;
      z-index: 998;
    }
  }
}

.animate-in {
  --s-translateYAnimateIn: 10vh;
  --d-delay: 0.25s;
  --d-delay-step: 0.2s;
  --d-in-opacity: 0.75s;
  --e-opacity: ease;
  --d-in-transform: 1s;
  --e-transform: var(--e-out);
  --delay-id: 0;

  opacity: 0;
  transform: translateY(var(--s-translateYAnimateIn));
  transition: opacity var(--e-opacity) var(--d-in-opacity), transform var(--e-transform) var(--d-in-transform);
  transition-delay: calc(var(--d-delay) + var(--delay-id) * var(--d-delay-step));
  will-change: opacity, transform;

  .is-displayed & {
    opacity: 1;
    transform: none;
  }

  @for $i from 1 to 10 {
    &__s#{$i} {
      --delay-id: #{$i};
    }
  }
}

.scroll-animate-in {
  --s-translateYAnimateIn: 20vh;
  --d-in-opacity: 0.75s;
  --e-opacity: ease;
  --d-in-transform: 1s;
  --e-transform: var(--e-out);

  visibility: hidden;
  opacity: 0;
  transform: translateY(var(--s-translateYAnimateIn));
  transition: opacity var(--e-opacity) var(--d-in-opacity), transform var(--e-transform) var(--d-in-transform);
  will-change: opacity, transform;

  &.is-displayed {
    visibility: visible;
    opacity: 1;
    transform: none;
  }
}

.transition-wave-in-enter-active {
  transition: transform var(--e-inout) 0.5s;
  transform-origin: top left;
}

.transition-wave-in-enter,
.transition-wave-in-leave-to {
  transform: scaleY(0);
}

.transition-wave-out-enter-active {
  transform: scaleY(0);
  transition: transform var(--e-inout) 0.5s;
  transform-origin: bottom left;
}

.transition-wave-out-leave-active {
  transform: scaleY(0);
}

.transition-wave-out-enter {
  transform: scaleY(1);
}

.transition-logo-enter-active {
  transition: opacity var(--e-inout) 0.5s;
}

// helper classes
.visually-hidden {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

.visually-hidden a:focus,
.visually-hidden input:focus,
.visually-hidden button:focus {
  position: static;
  width: auto;
  height: auto;
}
